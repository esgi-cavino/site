{"version":3,"sources":["webpack:///./src/app/pages/new-bottle/new-bottle.module.ts","webpack:///./src/app/pages/new-bottle/new-bottle.page.html","webpack:///./src/app/pages/new-bottle/new-bottle.page.scss","webpack:///./src/app/pages/new-bottle/new-bottle.page.ts","webpack:///./src/app/services/new-bottle.service.ts","webpack:///./src/app/services/region.service.ts"],"names":[],"mappings":"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","file":"pages-new-bottle-new-bottle-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewBottlePage } from './new-bottle.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewBottlePage\n  }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild(routes),\n        ReactiveFormsModule\n    ],\n  declarations: [NewBottlePage]\n})\nexport class NewBottlePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Nouvelle bouteille</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <form name=\\\"registerForm\\\" class=\\\"w3-container w3-card-4 w3-light-grey\\\">\\n    <p>Entrez vos informations ci-dessous afin d'enregistrer une nouvelle bouteille.</p>\\n\\n    <div>\\n      <p>\\n        <label>nom</label><br />\\n        <input\\n                name=\\\"name\\\"\\n                type=\\\"text\\\"\\n                [(ngModel)] = \\\"name\\\"></p>\\n      <p>\\n        <label>description</label><br />\\n        <input\\n                name=\\\"description\\\"\\n                type=\\\"text\\\"\\n                [(ngModel)] = \\\"description\\\"></p>\\n      <p>\\n        <label>prix</label><br />\\n        <input\\n                name=\\\"price\\\"\\n                type=\\\"text\\\"\\n                [(ngModel)] = \\\"price\\\"></p>\\n      <p>\\n        <label>prix moyen</label><br />\\n        <input\\n                name=\\\"averagePrice\\\"\\n                type=\\\"text\\\"\\n                [(ngModel)] = \\\"averagePrice\\\"></p>\\n      <p>\\n        <label>bio</label><br />\\n        <input\\n                name=\\\"isOrganic\\\"\\n                type=\\\"text\\\"\\n                [(ngModel)] = \\\"isOrganic\\\"></p>\\n      <p>\\n        <label>Type de vin</label><br />\\n        <input\\n                name=\\\"wineTypeId\\\"\\n                type=\\\"text\\\"\\n                [(ngModel)] = \\\"wineTypeId\\\"></p>\\n      <p>\\n        <label>pays</label><br />\\n        <input\\n                name=\\\"countryId\\\"\\n                type=\\\"text\\\"\\n                [(ngModel)] = \\\"countryId\\\"></p>\\n      <p>\\n        <label>région</label><br />\\n        <input\\n                name=\\\"regionId\\\"\\n                type=\\\"text\\\"\\n                [(ngModel)] = \\\"regionId\\\"></p>\\n      <p>\\n        <label>domaine</label><br />\\n        <input\\n                name=\\\"domainId\\\"\\n                type=\\\"text\\\"\\n                [(ngModel)] = \\\"domainId\\\"></p>\\n      <p>\\n        <label>millésime</label><br />\\n        <input\\n                name=\\\"vintageId\\\"\\n                type=\\\"text\\\"\\n                [(ngModel)] = \\\"vintageId\\\"></p>\\n    </div>\\n    <ion-button\\n            expand=\\\"block\\\"\\n            shape=\\\"round\\\"\\n            [disabled]=\\\"newBottleButtonStatus\\\"\\n            (click)=\\\"createNewBottle(name,\\n                                     description,\\n                                     price,\\n                                     averagePrice,\\n                                     isOrganic,\\n                                     wineTypeId,\\n                                     countryId,\\n                                     regionId,\\n                                     domainId,\\n                                     vintageId)\\\">\\n      Enregistrer\\n    </ion-button><br />\\n  </form>\\n\\n</ion-content>\\n\"","module.exports = \"p {\\n  margin-top: 15px;\\n  margin-bottom: 5px; }\\n\\ndiv {\\n  margin: 50px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbmV3LWJvdHRsZS9FOlxcRVNHSTQtY2F2aW5vXFxzaXRlXFxjYXZpbm8vc3JjXFxhcHBcXHBhZ2VzXFxuZXctYm90dGxlXFxuZXctYm90dGxlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixrQkFBa0IsRUFBQTs7QUFHcEI7RUFDRSxZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9uZXctYm90dGxlL25ldy1ib3R0bGUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsicCB7XHJcbiAgbWFyZ2luLXRvcDogMTVweDtcclxuICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbn1cclxuXHJcbmRpdiB7XHJcbiAgbWFyZ2luOiA1MHB4O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {NewBottleService} from '../../services/new-bottle.service';\nimport {Router} from '@angular/router';\nimport {RegionService} from '../../services/region.service';\n\n@Component({\n  selector: 'app-new-bottle',\n  templateUrl: './new-bottle.page.html',\n  styleUrls: ['./new-bottle.page.scss'],\n})\nexport class NewBottlePage implements OnInit {\n\n  private newBottleButtonStatus: boolean;\n  private regionList;\n  private name: string;\n  private description: string;\n  private price: number;\n  private averagePrice: number;\n  private isOrganic: boolean;\n  private wineTypeId: number;\n  private regionId: number;\n  private countryId: number;\n  private domainId: number;\n  private vintageId: number;\n\n  constructor(\n      private newBottleService: NewBottleService,\n      private regionService: RegionService,\n      private router: Router) { }\n\n  ngOnInit() {\n    this.regionService.getRegionsList()\n        .subscribe((data) => {\n          this.regionList = data;\n          console.log(this.regionList);\n        });\n  }\n\n  createNewBottle(name: string,\n                  description: string,\n                  price: number,\n                  averagePrice: number,\n                  isOrganic: boolean,\n                  wineTypeId: number,\n                  countryId: number,\n                  regionId: number,\n                  domainId: number,\n                  vintageId: number) {\n    this.newBottleButtonStatus = true;\n    this.newBottleService.registerNewBottle(name,\n                                            description,\n                                            price,\n                                            averagePrice,\n                                            isOrganic,\n                                            wineTypeId,\n                                            countryId,\n                                            regionId,\n                                            domainId,\n                                            vintageId)\n        .subscribe((data) => {\n          console.log(data);\n        });\n    this.newBottleButtonStatus = false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {ApplicationModel} from '../constants/generalconstants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewBottleService {\n\n  private uuid = localStorage.getItem('uuid');\n  private token = localStorage.getItem('token');\n  private options = {headers: new HttpHeaders({\n      Authorization: 'Bearer ' + this.token,\n      'Content-Type': 'application/json'})};\n  private newBottleUri =\n      ApplicationModel.DefaultApplicationDetails.onlineUrl\n      + ApplicationModel.DefaultApplicationDetails.newBottleRoute;\n\n  constructor(private httpClient: HttpClient) { }\n\n  registerNewBottle(name: string,\n                    description: string,\n                    price: number,\n                    averagePrice: number,\n                    isOrganic: boolean,\n                    wineTypeId: number,\n                    countryId: number,\n                    regionId: number,\n                    domainId: number,\n                    vintageId: number): any {\n    return this.httpClient.post(\n        this.newBottleUri,\n        {\n          name,\n          description,\n          price,\n          averagePrice,\n          isOrganic,\n          wineTypeId,\n          regionId,\n          countryId,\n          domainId,\n          vintageId\n        }, this.options);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {ApplicationModel} from '../constants/generalconstants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegionService {\n\n  private uuid = localStorage.getItem('uuid');\n  private token = localStorage.getItem('token');\n  private options = {headers: new HttpHeaders({\n      Authorization: 'Bearer ' + this.token,\n      'Content-Type': 'application/json'})};\n  private regionListUri =\n      ApplicationModel.DefaultApplicationDetails.onlineUrl\n      + ApplicationModel.DefaultApplicationDetails.regionsRoute\n      + '?offset=0&limit=20';\n\n  constructor(private http: HttpClient) { }\n\n  getRegionsList(): any {\n    return this.http.get(this.regionListUri, this.options);\n  }\n}\n"],"sourceRoot":""}