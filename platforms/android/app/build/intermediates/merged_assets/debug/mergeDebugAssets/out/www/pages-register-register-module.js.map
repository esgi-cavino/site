{"version":3,"sources":["webpack:///./src/app/pages/register/register.module.ts","webpack:///./src/app/pages/register/register.page.html","webpack:///./src/app/pages/register/register.page.scss","webpack:///./src/app/pages/register/register.page.ts","webpack:///./src/app/services/register.service.ts"],"names":[],"mappings":"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","file":"pages-register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","module.exports = \"<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\r\\n<link rel=\\\"stylesheet\\\" href=\\\"https://www.w3schools.com/w3css/4/w3.css\\\">\\r\\n\\r\\n<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Inscription</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <form name=\\\"registerForm\\\" class=\\\"w3-container w3-card-4 w3-light-grey\\\">\\r\\n    <h2>Inscription</h2>\\r\\n    <p>Entrez vos informations ci-dessous afin de vous inscrire.</p>\\r\\n\\r\\n    <p>\\r\\n      <label>prénom</label><br />\\r\\n      <input\\r\\n              name=\\\"firstname\\\"\\r\\n              type=\\\"text\\\"\\r\\n              [(ngModel)] = \\\"firstname\\\"></p>\\r\\n    <p>\\r\\n      <label>nom de famille</label><br />\\r\\n      <input\\r\\n              name=\\\"lastname\\\"\\r\\n              type=\\\"text\\\"\\r\\n              [(ngModel)] = \\\"lastname\\\"></p>\\r\\n    <p>\\r\\n      <label>e-mail</label><br />\\r\\n      <input\\r\\n              name=\\\"email\\\"\\r\\n              type=\\\"text\\\"\\r\\n              [(ngModel)] = \\\"email\\\"></p>\\r\\n    <p>\\r\\n      <label>mot de passe</label><br />\\r\\n      <input\\r\\n              name=\\\"password\\\"\\r\\n              type=\\\"password\\\"\\r\\n              [(ngModel)] = \\\"password\\\"></p>\\r\\n    <p>\\r\\n      <label>retapez le mot de passe</label><br />\\r\\n      <input\\r\\n              name=\\\"password_bis\\\"\\r\\n              type=\\\"password\\\"\\r\\n              [(ngModel)] = \\\"passwordbis\\\"></p>\\r\\n\\r\\n    <ion-button\\r\\n            expand=\\\"block\\\"\\r\\n            shape=\\\"round\\\"\\r\\n            [disabled]=\\\"registerButtonStatus\\\"\\r\\n            (click)=\\\"register(firstname, lastname, email, password )\\\">\\r\\n      inscription\\r\\n    </ion-button><br />\\r\\n  </form>\\r\\n\\r\\n</ion-content>\\r\\n\"","module.exports = \"input[type=text] {\\n  background-color: lightgrey;\\n  color: black;\\n  border: 2px solid black;\\n  border-radius: 4px; }\\n\\ninput[type=password] {\\n  background-color: lightgrey;\\n  color: black;\\n  border: 2px solid black;\\n  border-radius: 4px; }\\n\\nion-button {\\n  border-spacing: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvRTpcXEVTR0k0LWNhdmlub1xcc2l0ZVxcY2F2aW5vL3NyY1xcYXBwXFxwYWdlc1xccmVnaXN0ZXJcXHJlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDJCQUEyQjtFQUMzQixZQUFZO0VBQ1osdUJBQXVCO0VBQ3ZCLGtCQUFrQixFQUFBOztBQUdwQjtFQUNFLDJCQUEyQjtFQUMzQixZQUFZO0VBQ1osdUJBQXVCO0VBQ3ZCLGtCQUFrQixFQUFBOztBQUdwQjtFQUNFLG9CQUFvQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW5wdXRbdHlwZT10ZXh0XSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmV5O1xyXG4gIGNvbG9yOiBibGFjaztcclxuICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9cGFzc3dvcmRdIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyZXk7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxufVxyXG5cclxuaW9uLWJ1dHRvbiB7XHJcbiAgYm9yZGVyLXNwYWNpbmc6IDEwcHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { RegisterService } from '../../services/register.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { LoadingController } from '@ionic/angular';\r\nimport { AlertController } from '@ionic/angular';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n  private registerResponse: Subscription;\r\n  private token: string;\r\n  private registerButtonStatus = false;\r\n  private firstname = '';\r\n  private lastname = '';\r\n  private email = '';\r\n  private password = '';\r\n  private passwordbis = '';\r\n\r\n  constructor(\r\n      private registerService: RegisterService,\r\n      private loadCtrl: LoadingController,\r\n      private alrtCtrl: AlertController,\r\n      private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async presentAlert(header: string, subHeader: string, message: string, buttons: Array<string>) {\r\n    const alert = await this.alrtCtrl.create({\r\n      header,\r\n      subHeader,\r\n      message,\r\n      buttons\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  register(firstname: string, lastname: string, email: string, password: string) {\r\n    this.registerButtonStatus = true;\r\n    if (this.firstname === ''\r\n        || this.lastname === ''\r\n        || this.email === ''\r\n        || this.password === ''\r\n        || this.passwordbis === '') {// Checks if all fields have been filled\r\n      this.presentAlert('Erreur',\r\n          'Veuillez renseigner tous les champs, merci.',\r\n          null,\r\n          ['ok']);\r\n      this.registerButtonStatus = false;\r\n    } else if (this.password !== this.passwordbis) {\r\n      this.presentAlert('Erreur',\r\n          'Les mots de passe renseignés sont différents',\r\n          null,\r\n          ['ok']);\r\n      this.registerButtonStatus = false;\r\n    } else {\r\n      this.registerResponse = this.registerService.register(firstname, lastname, email, password)\r\n          .subscribe((response) => {\r\n            console.log(response.token);\r\n            this.token = response.token;\r\n            this.presentAlert('Erreur',\r\n                'Vous avez été enregistré en tant que ' + this.firstname + ' ' + this.lastname,\r\n                null,\r\n                ['ok']);\r\n            localStorage.setItem('token', response.token);\r\n            this.router.navigateByUrl('/home');\r\n          });\r\n      this.registerButtonStatus = false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { ApplicationModel } from '../constants/generalconstants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class RegisterService {\r\n\r\n  private headers: HttpHeaders = new HttpHeaders({'Content-Type': 'application/json'});\r\n  private registerUri = ApplicationModel.DefaultApplicationDetails.onlineUrl + ApplicationModel.DefaultApplicationDetails.registerRoute;\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  register(firstname: string, lastname: string, email: string, password: string): any {\r\n    return this.httpClient.post(\r\n        this.registerUri,\r\n        {\r\n          firstname,\r\n          lastname,\r\n          email,\r\n          password\r\n        });\r\n  }\r\n}\r\n"],"sourceRoot":""}